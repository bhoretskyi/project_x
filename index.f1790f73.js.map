{"mappings":"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","sources":["src/js/books_api.js","src/index.js","src/js/modal.js"],"sourcesContent":["const API = 'https://books-backend.p.goit.global';\n\nexport async function getCategories() {\n  const response = await fetch(`${API}/books/category-list`);\n  const category = await response.json();\n  return category;\n}\n\nexport async function getBestBook() {\n  const response = await fetch(`${API}/books/top-books`);\n  const bookByCategory = await response.json();\n  return bookByCategory;\n}\n\nexport async function getBookById(id) {\n  const response = await fetch(`${API}/books/${id}`);\n  const bookById = await response.json();\n  return bookById;\n}\n\nexport async function getBookByCategory(category) {\n  const response = await fetch(`${API}/books/category?category=${category}`);\n  const bookByCategory = await response.json();\n  return bookByCategory;\n}\n\n","import { openModal } from './js/modal.js';\nimport { closeModal } from './js/modal.js';\nimport {\n  getBestBook,\n  getCategories,\n  getBookByCategory,\n} from './js/books_api.js';\nimport { getBookById } from './js/books_api.js';\n\nconst modalContent = document.querySelector('.modal-content-parent');\nconst closeModalBtn = document.querySelector('.close');\nconst addToListBtn = document.querySelector('.add-to-list-btn');\nconst removeFromListBtn = document.querySelector('.remove-from-list-btn');\nconst bookCategoryTitleContainer = document.querySelector(\n  '.book-category-title-container'\n);\n\nconst allCategories = document.querySelector('.all-categories-js');\nconst categorySectionList = document.querySelector('.book-kategories-list-js');\nconst sectionSelectedBooksByCategory = document.querySelector('.books-by-category');\nconst BOOKS = [];\n// localStorage.clear()\n\ncloseModalBtn.addEventListener('click', closeModal);\naddToListBtn.addEventListener('click', e => {\n  const idForButton =\n    e.currentTarget.previousElementSibling.firstElementChild.lastElementChild\n      .children[3].textContent;\n\n  addToListBtn.hidden = true;\n  removeFromListBtn.hidden = false;\n  BOOKS.push(idForButton);\n  pushBookIdToStorage(BOOKS);\n});\nremoveFromListBtn.addEventListener('click', e => {\n  const idForRemoveButton =\n    e.currentTarget.parentElement.children[1].firstElementChild.lastElementChild\n      .children[3].textContent;\n  console.log(idForRemoveButton);\n  addToListBtn.hidden = false;\n  removeFromListBtn.hidden = true;\n  removeBookFromStorage(idForRemoveButton);\n});\n\nfunction pushBookIdToStorage(array) {\n  localStorage.setItem('books', JSON.stringify(array));\n}\nfunction removeBookFromStorage(book) {\n  const newBooks = BOOKS.filter(item => item !== book);\n  BOOKS.splice(0, BOOKS.length, ...newBooks);\n  localStorage.setItem('books', JSON.stringify(BOOKS));\n}\n\nsectionSelectedBooksByCategory.addEventListener('click', e => {\n  const bookId = e.target.parentElement.id;\n  if (BOOKS.includes(bookId)) {\n    addToListBtn.hidden = true;\n    removeFromListBtn.hidden = false;\n  }\n  if (!BOOKS.includes(bookId)) {\n    addToListBtn.hidden = false;\n    removeFromListBtn.hidden = true;\n  }\n\n  if (e.target.type === 'button') {\n    const buttonSelectedCategory =\n      e.target.parentElement.lastElementChild.textContent;\n    getBookByCategory(buttonSelectedCategory)\n      .then(resp => {\n        bookCategoryTitleContainer.innerHTML = '';\n        let categoryWords = buttonSelectedCategory.split(' ');\n\n        let firstWords = categoryWords.slice(0, -1).join(' ');\n        let lastWord = categoryWords.slice(-1);\n\n        bookCategoryTitleContainer.innerHTML = `<h2>${firstWords}<span class=\"last-title-word\"> ${lastWord}</span></h2>`;\n        sectionSelectedBooksByCategory.innerHTML = '';\n        resp.map(book => {\n          sectionSelectedBooksByCategory.insertAdjacentHTML(\n            'beforeend',\n\n            `<div id='${book._id}' class=\"section-book-card section-card\">\n          <img class=\"section-book-card-img\"  src=\"${book.book_image}\" alt=\"\" loading=\"lazy\" width=\"335\">     \n          <h4 class=\"section-book-card-title\">${book.title}</h4>\n          <p class=\"section-book-card-text\">${book.author}</p>    \n      </div>`\n          );\n        });\n      })\n      .catch(err => console.log(err));\n    return;\n  }\n\n  if (!e.target.parentElement.id) {\n    return;\n  }\n\n  getBookById(e.target.parentElement.id)\n    .then(resp => {\n      if (!resp) {\n        throw new Error('err');\n      }\n      if (resp.message !== 'Not found') {\n        openModal();\n        modalContent.innerHTML = `<div class=\"modal-content\"><img class='modal-image' src=\"${resp.book_image}\" alt=\"\">\n        <div>\n      <h4>${resp.title}</h4>\n      <p>${resp.author}</p>\n      <p>${resp.description}</p>\n      <p hidden>${resp._id}</p>\n      `;\n      }\n    })\n    .catch(err => console.log(err));\n});\nstartPage();\nfunction startPage() {\n  const savedBooksInStorage = JSON.parse(localStorage.getItem('books'));\n  if (savedBooksInStorage) {\n    BOOKS.push(...savedBooksInStorage);\n  }\n  sectionSelectedBooksByCategory.innerHTML = '';\n  bookCategoryTitleContainer.innerHTML =\n    '<h2>Best Sellers <span class=\"last-title-word\">Books</span></h2>';\n  getBestBook().then(resp =>\n    resp.map(book => {\n      const books = book.books;\n      sectionSelectedBooksByCategory.insertAdjacentHTML(\n        'beforeend',\n        `\n            <h2 class=\"book-category-name\">${book.list_name}</h2>\n  <div class=\"one-category-section\">\n\n            <div id=\"${books[0]._id}\" class =\"add-book-js all-books-block item1\">\n                       <img src=\"${books[0].book_image}\" alt=\"\" loading=\"lazy\" width=\"335\" class=\"all-books-block-img\">\n                     <h4 class=\"all-books-block-title\">${books[0].title}</h4>\n                      <p class=\"all-books-block-text\">${books[0].author}</p>\n            \n                     <button type=\"button\"> See more</button>\n                       <span hidden>${books[0].list_name}</span>\n            \n                  </div>\n                  <div id=\"${books[1]._id}\" class =\"add-book-js all-books-block item2\">\n                       <img src=\"${books[1].book_image}\" alt=\"\" loading=\"lazy\" width=\"335\" class=\"all-books-block-img\">\n                     <h4 class=\"all-books-block-title\">${books[1].title}</h4>\n                      <p class=\"all-books-block-text\">${books[1].author}</p>\n            \n                     <button type=\"button\"> See more</button>\n                       <span hidden>${books[0].list_name}</span>\n            \n                  </div>\n                  <div id=\"${books[2]._id}\" class =\"add-book-js all-books-block item3\">\n                       <img src=\"${books[2].book_image}\" alt=\"\" loading=\"lazy\" width=\"335\" class=\"all-books-block-img\">\n                     <h4 class=\"all-books-block-title\">${books[2].title}</h4>\n                      <p class=\"all-books-block-text\">${books[2].author}</p>\n            \n                     <button type=\"button\"> See more</button>\n                       <span hidden>${books[2].list_name}</span>\n            \n                  </div>\n                  <div id=\"${books[3]._id}\" class =\"add-book-js all-books-block item4\">\n                       <img src=\"${books[3].book_image}\" alt=\"\" loading=\"lazy\" width=\"335\" class=\"all-books-block-img\">\n                     <h4 class=\"all-books-block-title\">${books[3].title}</h4>\n                      <p class=\"all-books-block-text\">${books[3].author}</p>\n            \n                     <button type=\"button\"> See more</button>\n                       <span hidden>${books[3].list_name}</span>\n            \n                  </div>\n                  <div id=\"${books[4]._id}\" class =\"add-book-js all-books-block item5\">\n                       <img src=\"${books[4].book_image}\" alt=\"\" loading=\"lazy\" width=\"335\" class=\"all-books-block-img\">\n                     <h4 class=\"all-books-block-title\">${books[4].title}</h4>\n                      <p class=\"all-books-block-text\">${books[4].author}</p>\n            \n                     <button type=\"button\"> See more</button>\n                       <span hidden>${books[4].list_name}</span>\n            \n                  </div>\n                  </div>\n            `\n      );\n    })\n  );\n}\n\ncategorySectionList.addEventListener('click', pushBooksByCategory);\nallCategories.addEventListener('click', e => {\n  startPage();\n});\n\nfunction pushBooksByCategory(e) {\n  const selectedCategory = e.target.outerText;\n  if (e.target.localName !== 'li') {\n    return;\n  }\n\n  if (selectedCategory.length <= 33) {\n    let categoryWords = selectedCategory.split(' ');\n\n    let firstWords = categoryWords.slice(0, -1).join(' ');\n    let lastWord = categoryWords.slice(-1);\n\n    bookCategoryTitleContainer.innerHTML = `<h2>${firstWords}<span class=\"last-title-word\"> ${lastWord}</span></h2>`;\n  }\n\n  getBookByCategory(selectedCategory)\n    .then(resp => {\n      sectionSelectedBooksByCategory.innerHTML = '';\n      resp.map(book => {\n        sectionSelectedBooksByCategory.insertAdjacentHTML(\n          'beforeend',\n\n          `<div id='${book._id}' class=\"section-book-card section-card\">\n          <img class=\"section-book-card-img\"  src=\"${book.book_image}\" alt=\"\" loading=\"lazy\" width=\"335\">\n          <h4 class=\"section-book-card-title\">${book.title}</h4>\n          <p class=\"section-book-card-text\">${book.author}</p>\n      </div>`\n        );\n      });\n    })\n    .catch(err => console.log(err));\n}\n\ngetCategories()\n  .then(resp => {\n    sectionSelectedBooksByCategory.innerHTML = '';\n    if (!resp) {\n      throw new Error('error');\n    }\n    return resp.map(category =>\n      categorySectionList.insertAdjacentHTML(\n        'beforeend',\n        `<li class =\"book-category\">${category.list_name}</li>`\n      )\n    );\n  })\n  .catch(err => console.log(err));\n","export function openModal() {\n    document.getElementById(\"myModal\").style.display = \"block\";\n  }\n  export function closeModal() {\n    document.getElementById(\"myModal\").style.display = \"none\";\n  }  "],"names":["async","$0af74fd4d73caa0f$export$56c90601a6676d25","response","fetch","json","$0af74fd4d73caa0f$export$7f429e0f3975c907","id","$0af74fd4d73caa0f$export$3356e9d9184fb14f","category","$1f0dc3b9307be026$var$modalContent","document","querySelector","$1f0dc3b9307be026$var$closeModalBtn","$1f0dc3b9307be026$var$addToListBtn","$1f0dc3b9307be026$var$removeFromListBtn","$1f0dc3b9307be026$var$bookCategoryTitleContainer","$1f0dc3b9307be026$var$allCategories","$1f0dc3b9307be026$var$categorySectionList","$1f0dc3b9307be026$var$sectionSelectedBooksByCategory","$1f0dc3b9307be026$var$BOOKS","$1f0dc3b9307be026$var$startPage","savedBooksInStorage","JSON","parse","localStorage","getItem","push","innerHTML","then","resp","map","book","books","insertAdjacentHTML","list_name","_id","book_image","title","author","addEventListener","getElementById","style","display","e","idForButton","currentTarget","previousElementSibling","firstElementChild","lastElementChild","children","textContent","array","hidden","setItem","stringify","idForRemoveButton","parentElement","console","log","newBooks","filter","item","splice","length","$1f0dc3b9307be026$var$removeBookFromStorage","bookId","target","includes","type","Error","message","description","catch","err","buttonSelectedCategory","categoryWords","split","firstWords","slice","join","lastWord","selectedCategory","outerText","localName"],"version":3,"file":"index.f1790f73.js.map"}