{"mappings":"AAQOA,eAAeC,IACpB,MAAMC,QAAiBC,MAAM,uDAE7B,aAD6BD,EAASE,M,CAIjCJ,eAAeK,EAAYC,GAChC,MAAMJ,QAAiBC,MAAM,6CAAgBG,KAE7C,aADuBJ,EAASE,M,CCXlC,MAAMG,EAAeC,SAASC,cAAc,kBACtCC,EAAgBF,SAASC,cAAc,UACvCE,EAAqBH,SAASC,cAAc,wBAE5CG,EAAgBJ,SAASC,cAAc,sBACvCI,EAAsBL,SAASC,cAAc,4BAC7CK,EACJN,SAASC,cAAc,sBAyBzB,SAASM,IACPd,IAAoBe,MAAKC,IACvBN,EAAmBO,YAAc,qBAEjCD,EAAKE,KAAIC,IACP,MAAMC,EAAOD,EAAKE,UAAUC,MAAa,KACzCT,EAA+BU,mBAC7B,YACA,WACAH,EAAK,QAASA,EAAK,GAAK,YAAcA,EAAK,GAAK,YAAcA,EAAK,GACjE,YAAcA,EAAK,GAAK,YAAcA,EAAK,GAAK,mBAGpDD,EAAKK,MAAMN,KAAIO,IACb,GAAIA,EAASJ,YAAcF,EAAKE,YAC9BR,EAA+BU,mBAC7B,YACA,YAAYE,EAASC,qCACXD,EAASE,iEACfF,EAASG,4BACVH,EAASI,gFAIVV,EAAKK,MAAM,GAAGI,QAAUH,EAASG,OAAO,CAC1BrB,SAASuB,eAAeL,EAASC,KACzCK,QAAS,C,IAGrB,GACF,G,CArDNtB,EAAcuB,iBAAiB,SCXtB,WACLzB,SAASuB,eAAe,WAAWG,MAAMC,QAAU,M,IDWvDrB,EAA+BmB,iBAAiB,SAASG,IAClDA,EAAEC,OAAOC,cAAchC,IAI5BD,EAAY+B,EAAEC,OAAOC,cAAchC,IAChCU,MAAKC,IACJ,IAAKA,EACH,MAAM,IAAIsB,MAAM,OAEG,cAAjBtB,EAAKuB,UCxBXhC,SAASuB,eAAe,WAAWG,MAAMC,QAAU,QD0B/C5B,EAAakC,UAAY,cAAcxB,EAAKW,2DACxCX,EAAKY,wBACNZ,EAAKa,wBACLb,EAAKyB,0B,IAIXC,OAAMC,GAAOC,QAAQC,IAAIF,IAAK,IAEnC7B,IAmCAF,EAAoBoB,iBAAiB,SAiCrC,SAA6BG,GAC3B,MAAMW,EAAmBX,EAAEC,OAAOW,UAE9BD,EAAiBE,QAAU,KAC7BtC,EAAmBO,YAAc6B,GAGnC,IAAIG,EAAW,GACfjD,IACGe,MAAKC,IACJH,EAA+B2B,UAAY,GAC3C,MAAMU,EAAgBlC,EACnBmC,QAAOhC,GACCA,EAAKE,YAAcyB,IAE3B5B,KAAIC,GAAQA,EAAKK,QACpByB,EAASG,QAAQF,GACeD,EAAS,GACjB/B,KAAIC,IAC1BN,EAA+BU,mBAC7B,YAEA,YAAYJ,EAAKO,kGACwBP,EAAKQ,+FACVR,EAAKS,yDACPT,EAAKU,yBAExC,GACD,IAEHa,OAAMC,GAAOC,QAAQC,IAAIF,I,IA9D9BhC,EAAcqB,iBAAiB,SAASG,IACtCS,QAAQC,IAAIV,GACZtB,EAA+B2B,UAAY,GAC3C1B,GAAW,IDzENf,iBACL,MAAME,QAAiBC,MAAM,2DAE7B,aADuBD,EAASE,M,CCqIlC,GACGY,MAAKC,IAEJ,GADAH,EAA+B2B,UAAY,IACtCxB,EACH,MAAM,IAAIsB,MAAM,SAElB,OAAOtB,EAAKE,KAAImC,GACdzC,EAAoBW,mBAClB,YACA,8BAA8B8B,EAAShC,mBAE1C,IAEFqB,OAAMC,GAAOC,QAAQC,IAAIF,KAE5B3C,IACGe,MAAKC,IACJ,IAAKA,EACH,MAAM,IAAIsB,MAAM,QAAQ,IAG3BI,OAAMC,GAAOC,QAAQC,IAAIF","sources":["src/js/books_api.js","src/index.js","src/js/modal.js"],"sourcesContent":["const API = 'https://books-backend.p.goit.global';\n\nexport async function getCategories() {\n  const response = await fetch(`${API}/books/category-list`);\n  const category = await response.json();\n  return category;\n}\n\nexport async function getBookByCategory() {\n  const response = await fetch(`${API}/books/top-books`);\n  const bookByCategory = await response.json();\n  return bookByCategory;\n}\n\nexport async function getBookById(id) {\n  const response = await fetch(`${API}/books/${id}`);\n  const bookById = await response.json();\n  return bookById;\n}\n","import { openModal } from './js/modal.js';\nimport { closeModal } from './js/modal.js';\nimport { getBookByCategory, getCategories } from './js/books_api.js';\nimport { getBookById } from './js/books_api.js';\n\nconst modalContent = document.querySelector('.modal-content');\nconst closeModalBtn = document.querySelector('.close');\nconst bookCategorytTitle = document.querySelector('.book-category-title');\n\nconst allCategories = document.querySelector('.all-categories-js');\nconst categorySectionList = document.querySelector('.book-kategories-list-js');\nconst sectionSelectedBooksByCategory =\n  document.querySelector('.books-by-category');\n\ncloseModalBtn.addEventListener('click', closeModal);\nsectionSelectedBooksByCategory.addEventListener('click', e => {\n  if (!e.target.parentElement.id) {\n    return;\n  }\n\n  getBookById(e.target.parentElement.id)\n    .then(resp => {\n      if (!resp) {\n        throw new Error('err');\n      }\n      if (resp.message !== 'Not found') {\n        openModal();\n        modalContent.innerHTML = ` <img src=\"${resp.book_image}\" alt=\"\" width='287' height='408'>\n      <h4>${resp.title}</h4>\n      <p>${resp.author}</p>\n      <p>${resp.description}</p>\n      `;\n      }\n    })\n    .catch(err => console.log(err));\n});\nstartPage();\nfunction startPage() {\n  getBookByCategory().then(resp => {\n    bookCategorytTitle.textContent = 'Best Sellers Books';\n\n    resp.map(book => {\n      const name = book.list_name.split(' ' && '-');\n      sectionSelectedBooksByCategory.insertAdjacentHTML(\n        'beforeend',\n        `\n  <h2>${name[0]}<p>${(name[1] = '')}<p/><p>${(name[2] = '')}<p/><p>${(name[3] =\n          '')}<p/><p>${(name[4] = '')}<p/><p>${(name[5] = '')}<p/></h2>\n  `\n      );\n      book.books.map(thisBook => {\n        if (thisBook.list_name === book.list_name) {\n          sectionSelectedBooksByCategory.insertAdjacentHTML(\n            'beforeend',\n            `<div id=\"${thisBook._id}\" hidden>\n          <img src=\"${thisBook.book_image}\" alt=\"\" loading=\"lazy\" width=\"335\">\n          <h4>${thisBook.title}</h4>\n          <p>${thisBook.author}</p>\n          <button type=\"button\"> See more</button>\n      </div>`\n          );\n          if (book.books[0].title === thisBook.title) {\n            const element = document.getElementById(thisBook._id);\n            element.hidden = false;\n          }\n        }\n      });\n    });\n  });\n}\n\ncategorySectionList.addEventListener('click', pushBooksByCategory);\nallCategories.addEventListener('click', e => {\n  console.log(e);\n  sectionSelectedBooksByCategory.innerHTML = '';\n  startPage();\n});\n// allCategories.addEventListener('click', () => {\n//   getBookByCategory()\n//     .then(resp => {\n//       sectionSelectedBooksByCategory.innerHTML = '';\n\n//       resp.map(book => {\n//         sectionSelectedBooksByCategory.insertAdjacentHTML(\n//           'beforeend',\n//           `<h2>${book.list_name}</h2>`\n//         );\n//         book.books.map(thisBook => {\n//           if (thisBook.list_name === book.list_name) {\n//             sectionSelectedBooksByCategory.insertAdjacentHTML(\n//               'beforeend',\n//               `<div id=\"${thisBook._id}\">\n//           <img src=\"${thisBook.book_image}\" alt=\"\" loading=\"lazy\" width=\"335\">\n//           <h4>${thisBook.title}</h4>\n//           <p>${thisBook.author}</p>\n//       </div>`\n//             );\n//           }\n//         });\n//       });\n//     })\n//     .catch(err => console.log(err));\n// });\n\nfunction pushBooksByCategory(e) {\n  const selectedCategory = e.target.outerText;\n\n  if (selectedCategory.length <= 33) {\n    bookCategorytTitle.textContent = selectedCategory;\n  }\n\n  let booksArr = [];\n  getBookByCategory()\n    .then(resp => {\n      sectionSelectedBooksByCategory.innerHTML = '';\n      const filteredBooks = resp\n        .filter(book => {\n          return book.list_name === selectedCategory;\n        })\n        .map(book => book.books);\n      booksArr.push(...filteredBooks);\n      const filteredByCategoryBooks = booksArr[0];\n      filteredByCategoryBooks.map(book => {\n        sectionSelectedBooksByCategory.insertAdjacentHTML(\n          'beforeend',\n\n          `<div id='${book._id}' class=\"section-book-card section-card\">\n        <img class=\"section-book-card-img\"  src=\"${book.book_image}\" alt=\"\" loading=\"lazy\" width=\"335\">\n        <h4 class=\"section-book-card-title\">${book.title}</h4>\n        <p class=\"section-book-card-text\">${book.author}</p>\n    </div>`\n        );\n      });\n    })\n    .catch(err => console.log(err));\n}\n\ngetCategories()\n  .then(resp => {\n    sectionSelectedBooksByCategory.innerHTML = '';\n    if (!resp) {\n      throw new Error('error');\n    }\n    return resp.map(category =>\n      categorySectionList.insertAdjacentHTML(\n        'beforeend',\n        `<li class =\"book-category\">${category.list_name}</li>`\n      )\n    );\n  })\n  .catch(err => console.log(err));\n\ngetBookByCategory()\n  .then(resp => {\n    if (!resp) {\n      throw new Error('error');\n    }\n  })\n  .catch(err => console.log(err));\n","export function openModal() {\n    document.getElementById(\"myModal\").style.display = \"block\";\n  }\n  export function closeModal() {\n    document.getElementById(\"myModal\").style.display = \"none\";\n  }  "],"names":["async","$0af74fd4d73caa0f$export$3356e9d9184fb14f","response","fetch","json","$0af74fd4d73caa0f$export$7f429e0f3975c907","id","$1f0dc3b9307be026$var$modalContent","document","querySelector","$1f0dc3b9307be026$var$closeModalBtn","$1f0dc3b9307be026$var$bookCategorytTitle","$1f0dc3b9307be026$var$allCategories","$1f0dc3b9307be026$var$categorySectionList","$1f0dc3b9307be026$var$sectionSelectedBooksByCategory","$1f0dc3b9307be026$var$startPage","then","resp","textContent","map","book","name","list_name","split","insertAdjacentHTML","books","thisBook","_id","book_image","title","author","getElementById","hidden","addEventListener","style","display","e","target","parentElement","Error","message","innerHTML","description","catch","err","console","log","selectedCategory","outerText","length","booksArr","filteredBooks","filter","push","category"],"version":3,"file":"index.a8d9df1a.js.map"}